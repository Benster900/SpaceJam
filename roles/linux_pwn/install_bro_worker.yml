####################################################################
# Setup Bro manager config
####################################################################
- name: Setup Bro node config
  template:
    src: files/node.cfg
    dest: /usr/local/bro/etc/node.cfg
    owner: root
    group: root
    mode: '0600'
  delegate_to: "{{groups['manager']}}"

####################################################################
# Install Bro dependencies
####################################################################
- name: Install Bro dependencies
  yum:
    name: '*'
    state: latest
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
- apt:
    upgrade: dist
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
- package: name={{ item }} state=installed
  with_items:
    - cmake
    - make
    - gcc
    - gcc-c++
    - flex
    - bison
    - libpcap-devel
    - openssl-devel
    - python-devel
    - swig
    - zlib-devel
    - git
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  with_items:
    - cmake
    - make
    - gcc
    - g++
    - flex
    - bison
    - libpcap-dev
    - libssl-dev
    - python-dev
    - swig
    - zlib1g-dev
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

####################################################################
# Bro git repo
####################################################################
- stat:
    path: /tmp/bro
  register: stat_bro
- git:
    repo: git://git.bro.org/bro
    recursive: yes
    dest: /tmp/bro
  when: stat_bro.stat.exists == False

####################################################################
# Compile Bro from source
####################################################################
- stat:
    path: /usr/local/bro
  register: stat_bro
- name: Compile Bro from source
  command: "{{ item }}"
  args:
    chdir: /tmp/bro
  with_items:
    - ./configure
    - make
    - make install
  when: stat_bro.stat.exists == False

- lineinfile:
    path: /usr/local/bro/etc/node.cfg
    regexp: '^interface='
    line: 'interface={{ ansible_default_ipv4.interface }}'

- name: Set $PATH for Bro
  lineinfile:
    dest: /etc/profile
    line: export PATH=/usr/local/bro/bin:$PATH
####################################################################
# Install/Setup FireallD
####################################################################
- include: roles/linux_pwn/firewall/centos_firewall.yml
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- include: roles/linux_pwn/firewall/ubuntu_firewall.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

####################################################################
# Start Bro
####################################################################
- name: Start Bro
  command: "{{ item }}"
  args:
    chdir: /usr/local/bro/bin
  with_items:
    - broctl deploy
    - broctl status
  delegate_to: "{{groups['manager']}}"

####################################################################
#  Slack notification
####################################################################
- name: Send slack notification when done
  slack:
    token: "{{ slack_token }}"
    msg: '{{ ansible_nodename }}:{{ ansible_default_ipv4.address }} - Finished setting up Bro agent'
    channel: "{{ slack_channel }}"
